//HintName: Spangle.LusterBits.Tests.TestClass.AutoTestStruct.g.cs
// <auto-generated/>
#nullable enable
#pragma warning disable CS8600
#pragma warning disable CS8601
#pragma warning disable CS8602
#pragma warning disable CS8603
#pragma warning disable CS8604

using System;
using Spangle.LusterBits;

namespace Spangle.LusterBits.Tests.TestClass;

public unsafe partial struct AutoTestStruct : IAutoTestStruct
{
    /// <summary>
    /// Zero
    /// </summary>
    public byte F1Byte => (byte)(_data[0]);

    /// <summary>
    /// Flag1
    /// </summary>
    public bool F2Bool => 0 != (_data[1] >>> 7);

    /// <summary>
    /// Flag2
    /// </summary>
    public bool F3Bool => 0 != ((_data[1] & 0x40) >>> 6);

    /// <summary>
    /// 1 bit field
    /// </summary>
    public byte F4Byte => (byte)((_data[1] & 0x20) >>> 5);

    /// <summary>
    /// 13bits ushort over 16bits alignment
    /// </summary>
    public ushort F5UShort => (ushort)(((_data[1] & 0x1F) << 8) + (_data[2]));

    /// <summary>
    /// 2bits byte
    /// </summary>
    public byte F6Byte => (byte)(_data[3] >>> 6);

    /// <summary>
    /// 2bits byte
    /// </summary>
    public byte F7Byte => (byte)((_data[3] & 0x30) >>> 4);

    /// <summary>
    /// 4bits byte
    /// </summary>
    public byte F8Byte => (byte)((_data[3] & 0x0F));

    internal Span<byte> DataAsSpan()
    {
        fixed (byte* ptr = _data)
        {
            return new Span<byte>(ptr, 4);
        }
    }
}
